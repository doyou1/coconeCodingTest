package cocone;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Graph4 {
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int dN = Integer.valueOf(br.readLine());
		int lN = Integer.valueOf(br.readLine());
		
		
		ArrayList<Integer>[] listArr = (ArrayList<Integer>[]) new ArrayList[dN+1];
		boolean[] checks = new boolean[dN+1];
		checks[1] = true;
		
		for(int i=0;i<dN+1;i++) {
			listArr[i] = new ArrayList<Integer>();
		}
		
		StringTokenizer st;
		for(int i=0; i<lN; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			
			int x = Integer.valueOf(st.nextToken());
			int y = Integer.valueOf(st.nextToken());
			
			listArr[x].add(y);
			listArr[y].add(x);
		}
		ArrayList<ArrayList<Integer>> list = new ArrayList<>();
		for(int i=1;i<lN;i++) {
//			System.out.print(i + " : ");
			ArrayList<Integer> prev = new ArrayList<>();
			
			for(int fs : listArr[i]) {
				
				if(checks[fs] = false) {
					prev.add(fs);
//					System.out.print(fs + " ");
					
				}
				
				for(int ffs : listArr[fs]) {
					if(ffs != fs && !prev.contains(ffs)) {
						
						if(checks[ffs] == false) {
							prev.add(ffs);
//							System.out.print(ffs + " ");
							checks[ffs] = true;							
						}
					}

				}

			}
//			System.out.println();
			list.add(prev);
		}
		System.out.println(dN - list.get(0).size());
	}
}

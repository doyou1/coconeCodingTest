package cocone;

import java.util.ArrayList;

public class DPSolution5 {
	
	public static void main(String[] args) {
		DPSolution5 s1 = new DPSolution5();
		
		int m = 4;
		int n = 3;
		int[][] puddles = {{2,2}};
		
		int answer = s1.solution(m,n,puddles);
	}
		
	public int solution(int m,int n,int[][] puddles) {	
		int answer = 0;

		int[][] map = new int[m+1][n+1];
		
		for(int[] puddle : puddles) {
			map[puddle[0]][puddle[1]] = -1;
		}
		
		dfs(map, 1, 1, 0, m, n);
		
		return answer;
	}
	
	static ArrayList<Integer> cnts = new ArrayList<>();
	
	public void dfs(int[][] map, int x, int y,int cnt
			,int m, int n) {
		
		if(map[x][y] == -1) {
			return;
		}
		
		if(m == x && n == y) {
			cnts.add(cnt);
			return;
		}
		
		dfs(map, x++, y, cnt++, m, n);
		dfs(map, x, y++, cnt++, m, n);
	}
	
}

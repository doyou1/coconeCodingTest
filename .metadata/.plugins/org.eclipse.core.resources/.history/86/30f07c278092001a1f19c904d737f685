package cocone;

import java.util.TreeSet;

public class DPSolution1 {
	
	static int N_glb;
	TreeSet<Integer>[] dynamic;
	
	public static void main(String[] args) {
		DPSolution1 s1 = new DPSolution1();
		
		int N = 5;
		int number = 12;
		
		s1.solution(N, number);
	}
	
	public TreeSet<Integer> solve(int n) {
		if((dynamic[n] != null) &&!(dynamic[n].isEmpty())) {
			return dynamic[n];
		}
		
		return dynamic[n] = temp;
	}
	
	public int solution(int N, int number) {
		
		int answer = 0;
		N_glb = N;
		
		dynamic = new TreeSet[10];
		
		for(int i=1; i<=8; i++) {
			solve(i);
			if(dynamic[i].contains(number)) {
				return i;
			}
		}
		
		return answer;
	}
	
	
}

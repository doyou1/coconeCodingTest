package cocone;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.StringTokenizer;

public class GreedTest12 {
	static int k;
	static String[] arr;
	static boolean[] visited;
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		k = Integer.valueOf(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		
		arr = new String[k];
		for(int i=0;i<k;i++) {
			arr[i] = st.nextToken();
		}
		visited = new boolean[10];
		String max = "";
		String min = "";
		
		HashMap<Integer,String> map = new HashMap<>();
		
		for(int i=0;i<10;i++) {
			map.put(i, i + "");
		}
		
		int maxC = 9;
		
		for(String s : arr) {
			String temp = "";
			if(s.equals("<")) {
				temp = temp + map.get(maxC--);
				temp = map.get(maxC--) + temp;
			}else if(s.equals(">")) {
				temp = map.get(maxC--) + temp;
				temp = temp + map.get(maxC--);
			}
			max += temp;
		}
		
		System.out.println(max.substring(0,k+1));
		
		
		int minC = 0;
		
		for(int i=0;i<arr.length;i++) {
			String temp = "";
			String x = map.get(minC);
			if(arr[i].equals(">")) {
				if(min.length() == 0) {
					min += "0";
				}else {
					
				}
				
			}else if(arr[i].equals("<")) {
				if(min.length() == 0) {
					min += "1";
				}
			}
			min += temp;
		}
		
		System.out.println(min);
		
		
	}
	
}
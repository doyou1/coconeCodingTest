package cocone;

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;


public class Graph2 {
	
	public static void main(String[] args){
	}
	
	static void bfs(int x, int y, int count, int w, int h) {
		Queue<Pairs> queue = new LinkedList<Pairs>();
		queue.add(new Pairs(x,y));
		check[x][y] = count;
		
		while(!queue.isEmpty()) {
			Pairs p = queue.remove();
			
			x = p.x;
			y = p.y;
			
			for(int i=0;i<dx.length;i++) {
				int nx = x + dx[i];
				int ny = y + dy[i];
				
				if(0 <= nx && nx < h && 0<= ny && ny < w) {
					if(arr[nx][ny] == 1 && check[nx][ny] == 0) {
						bfs(nx, ny, count, w, h);
					}
				}
			}
		}
	}
}
